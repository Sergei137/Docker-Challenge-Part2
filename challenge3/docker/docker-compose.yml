version: '3' # Specifies the Docker Compose version

services: # Defines the application services

  nginx: # Defines the nginx service, which is a reverse proxy server
    image: nginx:latest # Specifies the nginx image to use
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf # Mount the nginx.conf file from the host to /etc/nginx/nginx.conf in the nginx container
    ports:
      - "8080:80" # Maps port 8080 from the host to port 80 in the container
    depends_on:
      - node-service # Specifies that the node-service container must be running before the nginx container starts



  node-service: # Defines the node-service service, which is a Node.js application
    build: ./api/ # Specifies the path to the Dockerfile
    ports:
      - "3000:3000" # Maps port 3000 from the host to port 3000 in the container
    environment: # Sets environment variables for the container from .env file
      - DB_HOST=db
      - DB_USERNAME=root
      - DB_PASSWORD=${DB_ROOT_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
    depends_on:
      - db # Specifies that the db container must be running before the node-service container starts



  db: # Defines the db service, which is a MariaDB database
    build: ./db/ # Specifies the path to the Dockerfile
    restart: unless-stopped # Specifies that the container should always restart if it stops unexpectedly
    environment: # Sets environment variables for the container from .env file
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_HOST: ${DB_HOST}
    # ports:
    #   - "3306:3306"
    volumes:
        - db_data:/var/lib/mysql # Mounts the db_data volume to /var/lib/mysql in the db container

volumes: # Defines named volumes for persistent storage
  db_data: # Defines the db_data volume for the db service 